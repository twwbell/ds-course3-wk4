strsplit(names(data), "wtgp")
strsplit(names(data), "kut")
strsplit(names(data), wtgp)
strsplit(names(data), "[W]")
strsplit(names(data), "*")
strsplit(names(data), "[wtgp]")
strsplit(names(data), "[wtgp]")
strsplit(names(data), "[]")
strsplit(names(data), "")
strsplit(names(data), "wgtp")
strsplit(names(data), "wgtp")[123]
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", "course3_wk4_q2.csv", method = "curl")
read.csv("course3_wk4_q2.csv") -> data2
data2
str(data2)
read.csv("course3_wk3_q3-1.csv", stringsAsFactors = FALSE, skip =5, header = FALSE) -> gdp
gdp
str(gdp)
gdp$V5
class(gdp$V5)
gsub(",","",gdp$V5)
as.numeric(gsub(",","",gdp$V5))
gdp$V5 %>% gsub(",","") %>% as.numeric() %>% na.omit() %>% mean()
gdp$V5 %>% gsub(",","",) %>% as.numeric() %>% na.omit() %>% mean()
library(magrittr)
library(dplyr)
gdp$V5 %>% gsub(",","") %>% as.numeric() %>% na.omit() %>% mean()
gdp$V5 %>% gsub(",","", gdp$V5) %>% as.numeric() %>% na.omit() %>% mean()
gsub(",","",gdp$V5) %>% as.numeric() %>% na.omit() %>% mean()
gdp[1:190, ]
gdp[1:190, ] -> gdp_clean
gsub(",","",gdp_clean$V5) %>% as.numeric() %>% na.omit() %>% mean()
str(gdp_clean)
grep("^United", gdp_clean$V4)
gdp_clean$V4
View(data2)
grep("^United", gdp_clean$V4)
gdp_clean$V4[-186]
gdp_clean$V4[-186 && -99]
gdp_clean$V4[-186 & -99]
gdp_clean$V4[-186]
gdp_clean$V4[-c(99,186)]
grep("^United", gdp_clean$V4[-c(99,186)])
gdp_clean$V4[-c(99,186)]
gdp_clean$V4[-c(99,186)] -> countryNames
countryNames
grep("^United", countryNames)
grep("^United", c("Sta United", "United States", "Netherlands"))
grep("^United", countryNames)
countryNames
countryNames[grep("^United", countryNames)]
countryNames[grep("United", countryNames)]
countryNames[grep("*United", countryNames)]
countryNames[grep("*United*", countryNames)]
read.csv("course3_wk3_q3-2.csv", stringsAsFactors = FALSE) -> educational
gdp_clean
str(gdp_clean)
str(educational)
educational$Special.Notes
str(gdp_clean)
grep("[Jj]une", educational)
educational[10]
educational[10]
grep("[Jj]une", educational$Special.Notes)
grep("End of Fiscal Year: June", educational$Special.Notes)
educational$Special.Notes
grep("Fiscal year end: June", educational$Special.Notes)
table(grepl("Fiscal year end: June", educational$Special.Notes))
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
amzn
str(amzn)
str(amzn)
head(amzn)
names(amzn)
index(amzn)
head(index(amzn))
class(index(amzn))
index(amzn)[2012]
index(amzn)[year(2012)]
index(amzn)
index(amzn) > 2012
index(amzn) = 2012
index(amzn) == 2012
index(amzn) == year(2012)
year(2012)
amzn[index == 2012]
amzn[index == "2012"]
amzn[index = "2012"]
year(index(amzn))
year(index(amzn)) == 2012
length(year(index(amzn)) == 2012)
sampleTimes
length(year(sampleTimes) == 2012)
year("2014-3-8")
length(year(sampleTimes) = 2012)
length(year(sampleTimes) == 2012)
sum(year(sampleTimes) == 2012)
sum(year(sampleTimes) == 2012 & wday(sampleTimes) == 2)
gsub(",","",gdp_clean$V5) %>% as.numeric() %>% na.omit() %>% mean()
table(grepl("Fiscal year end: June", educational$Special.Notes))
setwd("/Users/thomasbell/Repos")
setwd("/Users/thomasbell/Repos/ds-course3-wk4")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip", "Dataset.zip", method = "curl")
dir()
unzip("Dataset.zip", list = TRUE)
dir()
read_file("UCI HAR Dataset/test/X_test.txt")
read_csv("UCI HAR Dataset/test/X_test.txt", col_names = FALSE) -> data
head(data)
read_csv("UCI HAR Dataset/test/x_test.txt", col_names = FALSE) -> data
head(data)
read_csv("UCI HAR Dataset/test/y_test.txt", col_names = FALSE) -> data
head(data)
dim(head)
dim(data)
source('~/Repos/ds-course3-wk4/run_analysis.R')
source('~/Repos/ds-course3-wk4/run_analysis.R')
readDataset("Dataset.zip")
list <- unzip("Dataset.zip", list = TRUE)
list[1]
list[1,1]
source('~/Repos/ds-course3-wk4/run_analysis.R')
readDataset()
source('~/Repos/ds-course3-wk4/run_analysis.R')
readDataset()
names <- c("activity_labels", "features", "subject_test", "set_test",
"labels_test", "subject_train", "set_train", "labels_train")
pos <- c(1, 2, 16, 17, 18, 30, 31, 32)
pos[4]
names[4]
read.csv(unz("Dataset.zip", list[1,pos[4]]), col.names = FALSE)
unzip("Dataset.zip", list[1,pos[4]])
source('~/Repos/ds-course3-wk4/run_analysis.R')
readDataset()
list[1, pos[i]]
list[1, pos[4]]
list[1,1]
list[1,pos[4]]
list[1,pos[1]]
list[1,pos[2]]
list[1,pos[3]]
pos
pos[1]
pos[2]
pos[3]
pos[4]
pos[5]
list[1,pos[3]]
list[1, pos[3] ]
list[[1, pos[3] ]]
list[1, 4 ]
list[1, 1 ]
list[1, 2 ]
list[3, 1 ]
source('~/Repos/ds-course3-wk4/run_analysis.R')
readDataset()
source('~/Repos/ds-course3-wk4/run_analysis.R')
source('~/Repos/ds-course3-wk4/run_analysis.R')
readDataset()
source('~/Repos/ds-course3-wk4/run_analysis.R')
readDataset()
source('~/Repos/ds-course3-wk4/run_analysis.R')
readDataset()
source('~/Repos/ds-course3-wk4/run_analysis.R')
source('~/Repos/ds-course3-wk4/run_analysis.R')
readDataset()
View(readDataset)
readDataset()
names
names[1]
names[2]
source('~/Repos/ds-course3-wk4/run_analysis.R')
readDataset()
readDataset()
source('~/Repos/ds-course3-wk4/run_analysis.R')
readDataset()
head(labels_test)
head(labels_train)
head(features)
source('~/Repos/ds-course3-wk4/run_analysis.R')
readDataset()
source('~/Repos/ds-course3-wk4/run_analysis.R')
readDataset()
head(features)
source('~/Repos/ds-course3-wk4/run_analysis.R')
readDataset()
head(activity_labels)
source('~/Repos/ds-course3-wk4/run_analysis.R')
head(activity_labels)
readDataset()
head(activity_labels)
head(features)
head(subject_test)
strsplit(features, "^[tf]")
strsplit(features, "^t")
strsplit(features, "t")
strsplit(features$V2, "t")
class(features$V2)
source('~/Repos/ds-course3-wk4/run_analysis.R')
readDataset()
strsplit(features$V2, "t")
strsplit(features, "^t")
strsplit(features$V2, "^t")
head(strsplit(features$V2, "^t"))
head(strsplit(features$V2, "-"))
head(strsplit(features$V2, "-")) -> test
test
unsplit(test)
unsplit(test,f)
head(strsplit(features$V2, "-"))
head(do.call(r.bind, strsplit(features$V2, "-")))
head(do.call(rbind, strsplit(features$V2, "-")))
head(unlist(strsplit(features$V2, "-"))
)
head(unlist(strsplit(features$V2, "-"), ncol = 3, byrow = TRUE))
library(dplyr)
separate(head(features), "-")
separate(head(features), V2, "-")
separate(head(features), c("sdf","gsd"), "-")
separate(head(features), V2, c("sdf","gsd"), "-")
separate(head(features), V2, c("activity","function","direction"), "-")
features %>%
separate(V2, c("activity","function","direction"), "-"))
features %>%
separate(V2, c("activity","function","direction"), "-")
head(labels_test)
cbind(labels_train, set_train)
cbind(head(labels_train), head(set_train))
str(cbind(head(labels_train), head(set_train)))
source('~/Repos/ds-course3-wk4/run_analysis.R')
readDataset()
cbind(head(labels_train), head(set_train))
head(set_test)
View(set_train)
source('~/Repos/ds-course3-wk4/run_analysis.R')
head(set_test)
str(head(set_test))
set_test[1]
source('~/Repos/ds-course3-wk4/run_analysis.R')
readDataset()
class(set_test)
dim(set_test)
dim(train_test)
source('~/Repos/ds-course3-wk4/run_analysis.R')
readDataset()
dim(test_set)
dim(test_labels)
dim(test_subject)
cbind(test_labels,test_subject,test_set)
cbind(test_labels,test_subject,test_set) -> test
head(test)
View(test)
nchar(test_set$V1[1])
nchar(test_set$V1[2])
nchar(test_set$V1[3])
nchar(test_set$V1[4])
test_set$V1[1]
class(test_set$V1[1])
source('~/Repos/ds-course3-wk4/run_analysis.R')
readDataset()
head(test_set)
names(test_set)
length(names(test_set))
source('~/Repos/ds-course3-wk4/run_analysis.R')
readDataset()
source('~/Repos/ds-course3-wk4/run_analysis.R')
readDataset()
readDataset()
source('~/Repos/ds-course3-wk4/run_analysis.R')
readDataset()
source('~/Repos/ds-course3-wk4/run_analysis.R')
readDataset()
source('~/Repos/ds-course3-wk4/run_analysis.R')
source('~/Repos/ds-course3-wk4/run_analysis.R')
readDataset()
source('~/Repos/ds-course3-wk4/run_analysis.R')
readDataset()
source('~/Repos/ds-course3-wk4/run_analysis.R')
readDataset()
rm(test)
test_labels
test_subject
source('~/Repos/ds-course3-wk4/run_analysis.R')
var_labels <- "variable_" + 1:561
var_labels <- c("variable_", 1:561)
var_labels
var_labels <- "variable_" + as.character(1:561)
paste("variable_", 1:561)
paste("variable_", 1:561, collapse = TRUE)
paste("variable_", 1:561, collapse = "")
paste("variable", 1:561, sep = "_")
data_labels <- c("activity", "subject", paste("variable", 1:561, sep = "_")
)
data_labels
cbind(test_labels, test_subject, test_set)
data_labels <- c("activity", "subject", paste("variable", 1:561, sep = "_"))
test_merged <- cbind(test_labels, test_subject, test_set)
colnames(test_merged) <- data_labels
colnames(test_merged) <- data_labels
data_labels <- c("activity", "subject", paste("variable", 1:561, sep = "_"))
test_merged <- cbind(test_labels, test_subject, test_set)
colnames(test_merged) <- data_labels
test_merged
names(test_merged)
head(test_merged)
str(test_merged)
data_labels <- c("activity", "subject", paste("variable", 1:561, sep = "_"))
test_merged <- cbind(test_labels, test_subject, test_set)
colnames(test_merged) <- data_labels
train_merged <- cbind(train_labels, train_subject, train_set)
colnames(train_merged) <- data_labels
rbind(test_merged, train_merged)
data_labels <- c("activity", "subject", paste("variable", 1:561, sep = "_"))
test_merged <- cbind(test_labels, test_subject, test_set)
colnames(test_merged) <- data_labels
train_merged <- cbind(train_labels, train_subject, train_set)
colnames(train_merged) <- data_labels
both_merged <- rbind(test_merged, train_merged)
str(features)
data_labels <- c("activity", "subject", features$V2)
test_merged <- cbind(test_labels, test_subject, test_set)
colnames(test_merged) <- data_labels
train_merged <- cbind(train_labels, train_subject, train_set)
colnames(train_merged) <- data_labels
both_merged <- rbind(test_merged, train_merged)
str(both_merged)
left_join(both_merged, activity_labels, by = c("activity" = "V1")) -> res
activity_labels
left_join(both_merged, activity_labels, by = c("activity" = "V1"))
source('~/Repos/ds-course3-wk4/run_analysis.R')
left_join(test_labels, activity_labels, by = c("V1" = "V2"))
class(activity_labels)
class(activity_labels$V2)
class(train_labels$V1)
readDataset <- function(zipfile = "Dataset.zip") {
list <- unzip(zipfile, list = TRUE)
activity_labels <<- read.table(unz(zipfile, list[1, 1]), header = FALSE,
sep = "", row.names = 1, stringsAsFactors = FALSE)
features <<- read.table(unz(zipfile, list[2, 1]), header = FALSE,
sep = "", row.names = 1, stringsAsFactors = FALSE)
test_subject <<- read.table(unz(zipfile, list[16, 1]), header = FALSE,
stringsAsFactors = FALSE)
test_set <<- read.table(unz(zipfile, list[17, 1]), header = FALSE,
sep = "", na.strings = "N/A", stringsAsFactors = FALSE)
test_labels <<- read.table(unz(zipfile, list[18, 1]), header = FALSE,
colClasses = "character", stringsAsFactors = FALSE)
train_subject <<- read.table(unz(zipfile, list[30, 1]), header = FALSE,
stringsAsFactors = FALSE)
train_set <<- read.table(unz(zipfile, list[31, 1]), header = FALSE,
sep = "", na.strings = "N/A", stringsAsFactors = FALSE)
train_labels <<- read.table(unz(zipfile, list[32, 1]), header = FALSE,
stringsAsFactors = FALSE)
}
readDataset()
class(test_labels$V1)
left_join(test_labels, activity_labels, by = c("V1" = "V2"))
left_join(test_labels, activity_labels, by = c("V1" = "V2"))
left_join(test_labels, activity_labels, by = c("V1" = index(activity_labels)))
readDataset <- function(zipfile = "Dataset.zip") {
list <- unzip(zipfile, list = TRUE)
activity_labels <<- read.table(unz(zipfile, list[1, 1]), header = FALSE,
sep = "", stringsAsFactors = FALSE)
features <<- read.table(unz(zipfile, list[2, 1]), header = FALSE,
sep = "", row.names = 1, stringsAsFactors = FALSE)
test_subject <<- read.table(unz(zipfile, list[16, 1]), header = FALSE,
stringsAsFactors = FALSE)
test_set <<- read.table(unz(zipfile, list[17, 1]), header = FALSE,
sep = "", na.strings = "N/A", stringsAsFactors = FALSE)
test_labels <<- read.table(unz(zipfile, list[18, 1]), header = FALSE,
colClasses = "character", stringsAsFactors = FALSE)
train_subject <<- read.table(unz(zipfile, list[30, 1]), header = FALSE,
stringsAsFactors = FALSE)
train_set <<- read.table(unz(zipfile, list[31, 1]), header = FALSE,
sep = "", na.strings = "N/A", stringsAsFactors = FALSE)
train_labels <<- read.table(unz(zipfile, list[32, 1]), header = FALSE,
stringsAsFactors = FALSE)
}
readDataset()
class(activity_labels$V1)
readDataset <- function(zipfile = "Dataset.zip") {
list <- unzip(zipfile, list = TRUE)
activity_labels <<- read.table(unz(zipfile, list[1, 1]), header = FALSE,
sep = "", stringsAsFactors = FALSE)
features <<- read.table(unz(zipfile, list[2, 1]), header = FALSE,
sep = "", row.names = 1, stringsAsFactors = FALSE)
test_subject <<- read.table(unz(zipfile, list[16, 1]), header = FALSE,
stringsAsFactors = FALSE)
test_set <<- read.table(unz(zipfile, list[17, 1]), header = FALSE,
sep = "", na.strings = "N/A", stringsAsFactors = FALSE)
test_labels <<- read.table(unz(zipfile, list[18, 1]), header = FALSE,
stringsAsFactors = FALSE)
train_subject <<- read.table(unz(zipfile, list[30, 1]), header = FALSE,
stringsAsFactors = FALSE)
train_set <<- read.table(unz(zipfile, list[31, 1]), header = FALSE,
sep = "", na.strings = "N/A", stringsAsFactors = FALSE)
train_labels <<- read.table(unz(zipfile, list[32, 1]), header = FALSE,
stringsAsFactors = FALSE)
}
readDataset()
left_join(test_labels, activity_labels, by = c("V1" = "V2"))
left_join(test_labels, activity_labels, by = c("V1" = "V1"))
## Add activity labels to both sets
test_labels <- left_join(test_labels, activity_labels, by = c("V1" = "V1"))
train_labels <- left_join(train_labels, activity_labels, by = c("V1" = "V1"))
## Prepare vector with column headers
data_labels <- c("activity_ID", "activity", "subject", features$V2)
## Merge columns test set
test_merged <- cbind(test_labels, test_subject, test_set)
colnames(test_merged) <- data_labels
## Merge columns training set
train_merged <- cbind(train_labels, train_subject, train_set)
colnames(train_merged) <- data_labels
## Merge all
both_merged <- rbind(test_merged, train_merged)
left_join(test_labels, activity_labels, by = c("V1" = "V2"))
test_labels <- left_join(test_labels, activity_labels, by = c("V1" = "V1"))
train_labels <- left_join(train_labels, activity_labels, by = c("V1" = "V1"))
train_labels <- left_join(train_labels, activity_labels, by = c("V1" = "V1"))
test_labels <- left_join(test_labels, activity_labels, by = c("V1" = "V1"))
test_labels
zipfile <- "Dataset.zip"
list <- unzip(zipfile, list = TRUE)
activity_labels <- read.table(unz(zipfile, list[1, 1]), header = FALSE,
sep = "", stringsAsFactors = FALSE)
features <- read.table(unz(zipfile, list[2, 1]), header = FALSE,
sep = "", row.names = 1, stringsAsFactors = FALSE)
test_subject <- read.table(unz(zipfile, list[16, 1]), header = FALSE,
stringsAsFactors = FALSE)
test_set <- read.table(unz(zipfile, list[17, 1]), header = FALSE,
sep = "", na.strings = "N/A", stringsAsFactors = FALSE)
test_labels <- read.table(unz(zipfile, list[18, 1]), header = FALSE,
stringsAsFactors = FALSE)
train_subject <- read.table(unz(zipfile, list[30, 1]), header = FALSE,
stringsAsFactors = FALSE)
train_set <- read.table(unz(zipfile, list[31, 1]), header = FALSE,
sep = "", na.strings = "N/A", stringsAsFactors = FALSE)
train_labels <- read.table(unz(zipfile, list[32, 1]), header = FALSE,
stringsAsFactors = FALSE)
test_labels <- left_join(test_labels, activity_labels, by = c("V1" = "V1"))
train_labels <- left_join(train_labels, activity_labels, by = c("V1" = "V1"))
## Prepare vector with column headers
data_labels <- c("activity_ID", "activity", "subject", features$V2)
## Merge columns test set
test_merged <- cbind(test_labels, test_subject, test_set)
colnames(test_merged) <- data_labels
## Merge columns training set
train_merged <- cbind(train_labels, train_subject, train_set)
colnames(train_merged) <- data_labels
## Merge all
both_merged <- rbind(test_merged, train_merged)
both_merged
str(both_merged)
source('~/Repos/ds-course3-wk4/run_analysis.R')
select(head(both_merged), contains("sum"))
select(head(both_merged), contains("um"))
select(head(both_merged), contains("Body"))
select(head(both_merged), 1:3)
select(both_merged, -activity_ID)
select(both_merged, -activity_ID)
select(both_merged, 1:2)
select(both_merged, activity)
grep("mean", names(both_merged))
grep("mean|std", names(both_merged))
subset(both_merged, -activity_ID)
subset(both_merged, select = -activity_ID)
both_merged <- rbind(test_merged, train_merged)
test_labels <- subset(both_merged, select = -activity_ID)
both_merged <- rbind(test_merged, train_merged)
test_labels <- subset(both_merged, select = -activity_ID)
zipfile <- "Dataset.zip"
list <- unzip(zipfile, list = TRUE)
activity_labels <- read.table(unz(zipfile, list[1, 1]), header = FALSE,
sep = "", stringsAsFactors = FALSE)
features <- read.table(unz(zipfile, list[2, 1]), header = FALSE,
sep = "", row.names = 1, stringsAsFactors = FALSE)
test_subject <- read.table(unz(zipfile, list[16, 1]), header = FALSE,
stringsAsFactors = FALSE)
test_set <- read.table(unz(zipfile, list[17, 1]), header = FALSE,
sep = "", na.strings = "N/A", stringsAsFactors = FALSE)
test_labels <- read.table(unz(zipfile, list[18, 1]), header = FALSE,
stringsAsFactors = FALSE)
train_subject <- read.table(unz(zipfile, list[30, 1]), header = FALSE,
stringsAsFactors = FALSE)
train_set <- read.table(unz(zipfile, list[31, 1]), header = FALSE,
sep = "", na.strings = "N/A", stringsAsFactors = FALSE)
train_labels <- read.table(unz(zipfile, list[32, 1]), header = FALSE,
stringsAsFactors = FALSE)
## Add activity labels to both sets
test_labels <- left_join(test_labels, activity_labels, by = c("V1" = "V1"))
train_labels <- left_join(train_labels, activity_labels, by = c("V1" = "V1"))
## Prepare vector with column headers
data_labels <- c("activity_ID", "activity", "subject", features$V2)
## Merge columns test set
test_merged <- cbind(test_labels, test_subject, test_set)
colnames(test_merged) <- data_labels
## Merge columns training set
train_merged <- cbind(train_labels, train_subject, train_set)
colnames(train_merged) <- data_labels
## Merge all and remove redundant column
both_merged <- rbind(test_merged, train_merged)
both_merged <- subset(both_merged, select = -activity_ID)
## Select columns for mean and std
mean_std_cols <- grep("mean|std", names(both_merged))
str(both_merged)
subset <- subset(both_merged, select = mean_std_cols)
source('~/Repos/ds-course3-wk4/run_analysis.R')
